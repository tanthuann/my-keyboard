{"version":3,"sources":["components/Header/index.jsx","contexts/index.jsx","components/KeyCap/index.jsx","hooks/useKeyPress.js","components/Keyboard/index.jsx","dataSources/index.js","hooks/useEventListener.js","layouts/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","PressedContext","createContext","usePressedKey","useContext","ProvidePressedKey","children","useState","pressedKeys","setPressedKeys","Provider","value","saveKey","key","toLowerCase","KeyCap","name","nameArr","style","isPressed","targetKey","element","window","keyPressed","setKeyPressed","downHandler","e","preventDefault","upHandler","blurHandler","useEffect","addEventListener","removeEventListener","useKeyPress","classnames","hasPressed","keys","fnKeys","marginLeft","areaKey1","areaKey2","mainKeys","width","arrowKeys","justifyContent","transform","Keyboard","eventName","handler","useCapture","memoHandler","useCallback","document","stopPropagation","eventListener","event","useEventListener","Object","map","keyListName","keyCap","includes","MyKeyboard","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0b1b7e1d.chunk.js","sourcesContent":["// libs\r\nimport React from \"react\";\r\n\r\nconst Header = () => <div className=\"header\">Welcome to My Keyboard</div>;\r\n\r\nexport default Header;\r\n","// libs\r\nimport React, { useState, useContext, createContext } from \"react\";\r\n\r\nconst PressedContext = createContext();\r\n\r\nconst ProvidePressedKey = ({ children }) => {\r\n  const [pressedKeys, setPressedKeys] = useState({});\r\n\r\n  const saveKey = (key) => {\r\n    setPressedKeys({ ...pressedKeys, [key.toLowerCase()]: true });\r\n  };\r\n\r\n  return (\r\n    <PressedContext.Provider value={{ pressedKeys, setPressedKeys, saveKey }}>\r\n      {children}\r\n    </PressedContext.Provider>\r\n  );\r\n};\r\n\r\nexport const usePressedKey = () => useContext(PressedContext);\r\n\r\nexport default ProvidePressedKey;\r\n","// libs\r\nimport React from \"react\";\r\nimport classnames from \"classnames\";\r\n// contexts\r\nimport { usePressedKey } from \"@/contexts\";\r\n// hooks\r\nimport { useKeyPress } from \"@/hooks/useKeyPress\";\r\n// others\r\nimport \"./style.scss\";\r\n\r\nconst KeyCap = ({ name, nameArr, style }) => {\r\n  const isPressed = useKeyPress(name);\r\n  const { pressedKeys } = usePressedKey();\r\n  return (\r\n    <div\r\n      className={classnames(\"key-cap\", {\r\n        isPressed: !!isPressed,\r\n        hasPressed: pressedKeys[name.toLowerCase()],\r\n      })}\r\n      style={style}\r\n    >\r\n      {nameArr || name}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KeyCap;\r\n","// libs\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const useKeyPress = (targetKey, element = window) => {\r\n  // State for keeping track of whether key is pressed\r\n  const [keyPressed, setKeyPressed] = useState(false);\r\n\r\n  // If pressed key is our target key then set to true\r\n  const downHandler = (e) => {\r\n    if (e.key.toLowerCase() === targetKey.toLowerCase()) {\r\n      e.preventDefault();\r\n      setKeyPressed(true);\r\n    }\r\n  };\r\n\r\n  // If released key is our target key then set to false\r\n  const upHandler = (e) => {\r\n    if (e.key.toLowerCase() === targetKey.toLowerCase()) {\r\n      e.preventDefault();\r\n      setKeyPressed(false);\r\n    }\r\n  };\r\n\r\n  // If window is blur then set to false\r\n  const blurHandler = (e) => {\r\n    e.preventDefault();\r\n    setKeyPressed(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Make sure element supports addEventListener\r\n    const isSupported = element && element.addEventListener;\r\n    if (!isSupported) return false;\r\n\r\n    // Add event listeners\r\n    element.addEventListener(\"keydown\", downHandler);\r\n    element.addEventListener(\"keyup\", upHandler);\r\n    element.addEventListener(\"blur\", blurHandler);\r\n    // Remove event listeners on cleanup\r\n    return () => {\r\n      element.removeEventListener(\"keydown\", downHandler);\r\n      element.removeEventListener(\"keyup\", upHandler);\r\n      element.removeEventListener(\"blur\", blurHandler);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []); // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  return keyPressed;\r\n};\r\n","// lib\r\nimport React from \"react\";\r\n// dataSources\r\nimport { fnKeys, areaKey1, areaKey2, mainKeys, arrowKeys } from \"@/dataSources\";\r\n// hooks\r\nimport { useEventListener } from \"@/hooks/useEventListener\";\r\n// components\r\nimport KeyCap from \"@/components/KeyCap\";\r\n// contexts\r\nimport { usePressedKey } from \"@/contexts\";\r\n// others\r\nimport \"./style.scss\";\r\n\r\nconst keys = { fnKeys, areaKey1, areaKey2, mainKeys, arrowKeys };\r\n\r\nconst Keyboard = () => {\r\n  const { saveKey } = usePressedKey();\r\n  const keydownHandler = (e) => {\r\n    e.preventDefault();\r\n    saveKey(e.key);\r\n  };\r\n\r\n  useEventListener(\"keydown\", keydownHandler);\r\n\r\n  return (\r\n    <div className=\"keyboard\">\r\n      {Object.keys(keys).map((keyListName) => (\r\n        <div key={keyListName} className={keyListName}>\r\n          {keys[keyListName].map((keyCap, key) =>\r\n            ![\"break-line\", \"empty\"].includes(keyCap.name) ? (\r\n              <KeyCap key={`${keyCap.name}-${key}`} {...keyCap} />\r\n            ) : (\r\n              <div key={`${keyCap.name}-${key}`} className={keyCap.name} />\r\n            )\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Keyboard;\r\n","const fnKeys = [\r\n  { name: \"Escape\", nameArr: \"Esc\" },\r\n  { name: \"F1\", style: { marginLeft: 62 } },\r\n  { name: \"F2\" },\r\n  { name: \"F3\" },\r\n  { name: \"F4\" },\r\n  { name: \"F5\", style: { marginLeft: 35 } },\r\n  { name: \"F6\" },\r\n  { name: \"F7\" },\r\n  { name: \"F8\" },\r\n  { name: \"F9\", style: { marginLeft: 35 } },\r\n  { name: \"F10\" },\r\n  { name: \"F11\" },\r\n  { name: \"F12\" },\r\n];\r\n\r\nconst mainKeys = [\r\n  { name: \"`\" },\r\n  { name: \"1\" },\r\n  { name: \"2\" },\r\n  { name: \"3\" },\r\n  { name: \"4\" },\r\n  { name: \"5\" },\r\n  { name: \"6\" },\r\n  { name: \"7\" },\r\n  { name: \"8\" },\r\n  { name: \"9\" },\r\n  { name: \"0\" },\r\n  { name: \"-\" },\r\n  { name: \"=\" },\r\n  { name: \"Backspace\", style: { width: 90 } },\r\n  { name: \"break-line\" },\r\n  { name: \"Tab\", style: { width: 50 } },\r\n  { name: \"q\" },\r\n  { name: \"w\" },\r\n  { name: \"e\" },\r\n  { name: \"r\" },\r\n  { name: \"t\" },\r\n  { name: \"y\" },\r\n  { name: \"u\" },\r\n  { name: \"i\" },\r\n  { name: \"o\" },\r\n  { name: \"p\" },\r\n  { name: \"[\" },\r\n  { name: \"]\" },\r\n  { name: \"\\\\\", style: { width: 70 } },\r\n  { name: \"break-line\" },\r\n  { name: \"CapsLock\", style: { width: 70 } },\r\n  { name: \"a\" },\r\n  { name: \"s\" },\r\n  { name: \"d\" },\r\n  { name: \"f\" },\r\n  { name: \"g\" },\r\n  { name: \"h\" },\r\n  { name: \"j\" },\r\n  { name: \"k\" },\r\n  { name: \"l\" },\r\n  { name: \";\" },\r\n  { name: \"'\" },\r\n  { name: \"Enter\", style: { width: 108 } },\r\n  { name: \"break-line\" },\r\n  { name: \"Shift\", style: { width: 105 } },\r\n  { name: \"z\" },\r\n  { name: \"x\" },\r\n  { name: \"c\" },\r\n  { name: \"v\" },\r\n  { name: \"b\" },\r\n  { name: \"n\" },\r\n  { name: \"m\" },\r\n  { name: \",\" },\r\n  { name: \".\" },\r\n  { name: \"/\" },\r\n  { name: \"Shift\", style: { width: 130 } },\r\n  { name: \"break-line\" },\r\n  { name: \"Control\", nameArr: \"Ctrl\", style: { width: 50 } },\r\n  { name: \"Meta\", nameArr: \"Win\", style: { width: 50 } },\r\n  { name: \"Alt\", style: { width: 50 } },\r\n  { name: \" \", style: { width: 290 } },\r\n  { name: \"Alt\", style: { width: 50 } },\r\n  { name: \"Fn\", style: { width: 50 } },\r\n  { name: \"ContextMenu\", nameArr: \"Menu\", style: { width: 50 } },\r\n  { name: \"Control\", nameArr: \"Ctrl\", style: { width: 50 } },\r\n];\r\n\r\nconst areaKey1 = [\r\n  { name: \"PrtSc\" },\r\n  { name: \"ScrollLock\", nameArr: \"ScrLk\" },\r\n  { name: \"Pause\" },\r\n];\r\n\r\nconst areaKey2 = [\r\n  { name: \"Insert\", nameArr: \"Ins\" },\r\n  { name: \"Home\" },\r\n  { name: \"PageUp\", nameArr: \"PgUp\" },\r\n  { name: \"Delete\", nameArr: \"Del\" },\r\n  { name: \"End\" },\r\n  { name: \"PageDown\", nameArr: \"PgDn\" },\r\n];\r\n\r\nconst arrowKeys = [\r\n  { name: \"empty\" },\r\n  { name: \"ArrowUp\", nameArr: \"▲\" },\r\n  { name: \"empty\" },\r\n  {\r\n    name: \"ArrowLeft\",\r\n    nameArr: \"▲\",\r\n    style: { justifyContent: \"flex-end\", transform: \"rotate(270deg)\" },\r\n  },\r\n  { name: \"ArrowDown\", nameArr: \"▼\" },\r\n  {\r\n    name: \"ArrowRight\",\r\n    nameArr: \"▲\",\r\n    style: { justifyContent: \"flex-start\", transform: \"rotate(90deg)\" },\r\n  },\r\n];\r\n\r\nexport { fnKeys, mainKeys, areaKey1, areaKey2, arrowKeys };\r\n","import { useEffect, useCallback } from \"react\";\r\n\r\nexport const useEventListener = (\r\n  eventName,\r\n  handler,\r\n  element = window,\r\n  useCapture\r\n) => {\r\n  const memoHandler = useCallback(\r\n    (e) => {\r\n      if (element === document) {\r\n        e.stopPropagation();\r\n      }\r\n      handler(e);\r\n    },\r\n    [element, handler]\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      const isSupported = element && element.addEventListener;\r\n      if (!isSupported) return false;\r\n\r\n      // Create event listener that calls handler function stored in ref\r\n      const eventListener = (event) => memoHandler(event);\r\n      // Add event listener\r\n      element.addEventListener(eventName, eventListener, useCapture);\r\n\r\n      // Remove event listener on cleanup\r\n      return () => {\r\n        element.removeEventListener(eventName, eventListener, useCapture);\r\n      };\r\n    },\r\n    [eventName, element, memoHandler, useCapture] // Re-run if eventName or element changes\r\n  );\r\n};\r\n","// libs\r\nimport React from \"react\";\r\n// components\r\nimport Header from \"@/components/Header\";\r\nimport Keyboard from \"@/components/Keyboard\";\r\n// others\r\nimport \"./style.scss\";\r\n\r\nconst MyKeyboard = () => (\r\n  <div className=\"my-keyboard\">\r\n    <Header />\r\n    <Keyboard />\r\n  </div>\r\n);\r\n\r\nexport default MyKeyboard;\r\n","// libs\r\nimport React from \"react\";\r\n// layouts\r\nimport MyKeyboard from \"./layouts\";\r\n// others\r\nimport \"./App.css\";\r\nimport ProvidePressedKey from \"./contexts\";\r\n\r\nconst App = () => (\r\n  <div className=\"App\">\r\n    <ProvidePressedKey>\r\n      <MyKeyboard />\r\n    </ProvidePressedKey>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}